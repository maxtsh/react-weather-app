{"version":3,"sources":["components/layouts/WeatherDaily.js"],"names":["langs","English","maxTemp","minTemp","Persian","React","memo","data","useState","width","setWidth","language","useContext","languageContext","useEffect","window","innerWidth","maxTemps","slice","map","eachMax","Math","round","temp","max","minTemps","eachMin","min","next7Days","getDaily","current","allData","labels","day","datasets","label","backgroundColor","borderColor","borderWidth","barThickness","className","eachDay","index","key","humidity","src","weather","icon","alt","options","maintainAspectRatio"],"mappings":"8JAQMA,EAAQ,CACZC,QAAS,CACPC,QAAS,iBACTC,QAAS,kBAEXC,QAAS,CACPF,QAAS,gEACTC,QAAS,4DAkFEE,cAAMC,MA9ErB,YAAiC,IAATC,EAAQ,EAARA,KAAQ,EACJC,qBADI,mBACvBC,EADuB,KAChBC,EADgB,KAExBC,EAAWC,qBAAWC,KAG5BC,qBAAU,WAGR,OAFAJ,EAASK,OAAOC,YAET,kBAAMN,OACZ,IAEH,IAAMO,EAAWV,EACdW,MAAM,EAAG,GACTC,KAAI,SAACC,GAAD,OAAaC,KAAKC,MAAMF,EAAQG,KAAKC,QACtCC,EAAWlB,EACdW,MAAM,EAAG,GACTC,KAAI,SAACO,GAAD,OAAaL,KAAKC,MAAMI,EAAQH,KAAKI,QACtCC,EAAYC,YAASlB,EAASmB,SAG9BC,EAAU,CACdC,OAHoBJ,EAAUT,KAAI,SAACc,GAAD,OAASA,EAAIf,MAAM,EAAG,MAIxDgB,SAAU,CACR,CACEC,MAAOnC,EAAMW,EAASmB,SAAS5B,QAC/BK,KAAMU,EACNmB,gBAAiB,UACjBC,YAAa,UACbC,YAAa,EACbC,aAAc,QAEhB,CACEJ,MAAOnC,EAAMW,EAASmB,SAAS3B,QAC/BI,KAAMkB,EACNW,gBAAiB,UACjBC,YAAa,UACbC,YAAa,EACbC,aAAc,UAKpB,OACE,yBAAKC,UAAU,iBACb,2BAAOA,UAAU,SACf,2BAAOA,UAAU,cACdjC,EAAKW,MAAM,EAAG,GAAGC,KAAI,SAACsB,EAASC,GAAV,OACpB,wBAAIC,IAAKD,GACP,4BAAKd,EAAUc,IACf,4BACE,uBAAGF,UAAU,gBADf,WAEOC,EAAQG,SAFf,MAIA,4BACE,yBACEC,IAAG,2CAAsCJ,EAAQK,QAAQ,GAAGC,KAAzD,QACHC,IAAI,MAGR,sCAAQ3B,KAAKC,MAAMmB,EAAQlB,KAAKU,KAAhC,iBAKR,yBAAKO,UAAU,iBACZ/B,EAAQ,KACP,kBAAC,IAAD,CACEF,KAAMwB,EACNkB,QAAS,CAAEC,qBAAqB,KAGlC,kBAAC,IAAD,CAAK3C,KAAMwB,EAASkB,QAAS,CAAEC,qBAAqB","file":"static/js/4.7ed9055c.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { languageContext } from \"../../context/languageContext\";\r\n\r\nimport { HorizontalBar, Bar } from \"react-chartjs-2\";\r\n\r\n// Get The Next 7 Days From Today\r\nimport getDaily from \"../../utils/getDaily\";\r\n\r\nconst langs = {\r\n  English: {\r\n    maxTemp: \"Max Temp °C\",\r\n    minTemp: \"Min Temp °C\",\r\n  },\r\n  Persian: {\r\n    maxTemp: \"حداکثر دما °C\",\r\n    minTemp: \"حداقل دما °C\",\r\n  },\r\n};\r\n\r\nfunction WeatherDaily({ data }) {\r\n  const [width, setWidth] = useState();\r\n  const language = useContext(languageContext);\r\n  // Slicing out to remove today data and only have the next 7 days\r\n\r\n  useEffect(() => {\r\n    setWidth(window.innerWidth);\r\n\r\n    return () => setWidth();\r\n  }, []);\r\n\r\n  const maxTemps = data\r\n    .slice(1, 8)\r\n    .map((eachMax) => Math.round(eachMax.temp.max));\r\n  const minTemps = data\r\n    .slice(1, 8)\r\n    .map((eachMin) => Math.round(eachMin.temp.min));\r\n  const next7Days = getDaily(language.current);\r\n  const weekDaysShort = next7Days.map((day) => day.slice(0, 3));\r\n\r\n  const allData = {\r\n    labels: weekDaysShort,\r\n    datasets: [\r\n      {\r\n        label: langs[language.current].maxTemp,\r\n        data: maxTemps,\r\n        backgroundColor: \"#302E63\",\r\n        borderColor: \"#302E90\",\r\n        borderWidth: 1,\r\n        barThickness: \"flex\",\r\n      },\r\n      {\r\n        label: langs[language.current].minTemp,\r\n        data: minTemps,\r\n        backgroundColor: \"#f57f17\",\r\n        borderColor: \"#f57f60\",\r\n        borderWidth: 1,\r\n        barThickness: \"flex\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"weather-daily\">\r\n      <table className=\"table\">\r\n        <tbody className=\"table-body\">\r\n          {data.slice(1, 8).map((eachDay, index) => (\r\n            <tr key={index}>\r\n              <td>{next7Days[index]}</td>\r\n              <td>\r\n                <i className=\"fas fa-tint\"></i>\r\n                {` ${eachDay.humidity}%`}\r\n              </td>\r\n              <td>\r\n                <img\r\n                  src={`https://openweathermap.org/img/w/${eachDay.weather[0].icon}.png`}\r\n                  alt=\"\"\r\n                />\r\n              </td>\r\n              <td>{`${Math.round(eachDay.temp.day)} °C`}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"chart-wrapper\">\r\n        {width > 1024 ? (\r\n          <HorizontalBar\r\n            data={allData}\r\n            options={{ maintainAspectRatio: false }}\r\n          />\r\n        ) : (\r\n          <Bar data={allData} options={{ maintainAspectRatio: true }} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(WeatherDaily);\r\n"],"sourceRoot":""}