{"version":3,"sources":["hooks/useLocalStorageReducer.js","reducers/LanguageReducer.js","context/languageContext.js","utils/getDaily.js","images/logo.png","images/cities/berlin.jpg","images/cities/france.jpg","images/cities/newyork.jpg","images/cities/london.jpg","images/loader.gif","images/weather-draw.svg","reducers/WeatherReducer.js","context/weatherContext.js","reducers/FullWeatherReducer.js","context/fullWeatherContext.js","actions/index.js","utils/languageData.js","components/layouts/Header.js","ErrorBoundry/ErrorHandler.js","components/pages/Home.js","hooks/useForm.js","components/layouts/LiveClock.js","components/modal/Modal.js","components/layouts/CitiesList.js","components/layouts/BackBtn.js","components/forms/SelectSavedCities.js","components/layouts/Loader.js","ErrorBoundry/ErrorBoundary.js","utils/getMonths.js","components/pages/Weather.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["useLocalStorageReducer","key","reducer","defaultValue","useReducer","value","JSON","parse","localStorage","getItem","String","err","state","dispatch","useEffect","setItem","stringify","languageReducer","action","type","current","payload","initialLanguage","languageContext","createContext","dispatchContext","LanguageProvider","props","language","langDispatch","langValue","useMemo","dispValue","Provider","children","time","Date","weekDays","English","Persian","getWeekDays","lang","getDaily","next7Days","i","getDay","push","x","module","exports","weatherReducer","error","loading","weather","initialWeather","weatherContext","WDispatchContext","WeatherProvider","weatherValue","fullWeatherReducer","all","fullWeatherContext","FWDispatchContext","FullWeatherProvider","fullWeather","dispatch2","fullWeatherValue","API_KEY","getWeather","city","a","url","axios","get","res","data","response","clearWeather","lon","lat","loadCitiesFromLs","headerLanguages","title","direction","menus","home","api","homeLanguages","searchTitle","submit","style","dir","borderRadiusSubmit","borderTopRightRadius","borderBottomRightRadius","borderRadiusField","borderTopLeftRadius","borderBottomLeftRadius","weatherLangs","mainTitle","normal","bold","leading","week","today","humidity","dewPoint","feelsLike","React","memo","useContext","useState","open","setOpen","handleLangChange","e","target","checked","className","onClick","src","Logo","alt","id","onChange","to","href","rel","languages","errMessage","ErrorHandler","currentLang","message","Home","initialForm","form","setForm","name","useForm","userForm","change","errUI","setErrUI","errTimeout","setTimeout","clearTimeout","handleChange","useCallback","handleSubmit","preventDefault","window","location","assign","coord","onSubmit","clock","setClock","getLiveClock","hour","getHours","minute","getMinutes","second","getSeconds","padStart","clockInterval","setInterval","clearInterval","langs","rusure","clear","Modal","toggleModal","hasErr","setErr","Error","removeItem","clearAllCities","reload","cities","berlin","paris","newyork","london","save","delete","currentCityLon","saveCity","deleteCity","setToggleModal","isSaved","find","item","border","handleClearCities","france","select","saved","noSaved","selectedCity","setSelectedCity","handleSelectChange","cityId","selectedCityData","handleFindSubmit","savedCities","disabled","map","Loader","classes","loaderImg","ErrorBoundary","hasError","caughtMessage","errorInfo","console","log","this","Component","months","WeatherDaily","lazy","WeatherHourly","Weather","show","popup","setPopup","match","params","split","getFullWeather","clearFullWeather","popupTimeout","handleCitySubmit","result","cityData","cityName","splice","toUpperCase","join","uuidv4","saveCityToLs","handleCityDelete","allCities","savedCity","filtered","filter","deleteCityFromLs","Number","currentTemp","Math","round","temp","feels_like","fallback","daily","weatherDraw","getDate","getMonth","getFullYear","icon","timezone","dew_point","hourly","NotFound","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5c1b82a9.chunk.js","sourcesContent":["import { useEffect, useReducer } from \"react\";\r\n\r\nfunction useLocalStorageReducer(key, reducer, defaultValue) {\r\n  // We will check for the default value in localStorage using init function of useReducer\r\n  const [state, dispatch] = useReducer(reducer, defaultValue, () => {\r\n    let value;\r\n    try {\r\n      value = JSON.parse(localStorage.getItem(key) || String(defaultValue));\r\n    } catch (err) {\r\n      value = defaultValue;\r\n    }\r\n    return value;\r\n  });\r\n\r\n  // We only want this to run when the state data changes\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state, key]);\r\n\r\n  return [state, dispatch];\r\n}\r\n\r\nexport default useLocalStorageReducer;\r\n","export default function languageReducer(state, action){\r\n    switch(action.type){\r\n        case \"CHANGE_LANGUAGE\":\r\n            return{\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n\r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n};","import React, { createContext, useMemo } from \"react\";\r\nimport useLocalStorageReducer from \"../hooks/useLocalStorageReducer\";\r\nimport languageReducer from \"../reducers/LanguageReducer\";\r\n\r\nconst initialLanguage = { current: \"English\" };\r\n\r\nexport const languageContext = createContext();\r\nexport const dispatchContext = createContext();\r\n\r\nexport function LanguageProvider(props) {\r\n  const [language, langDispatch] = useLocalStorageReducer(\r\n    \"language\",\r\n    languageReducer,\r\n    initialLanguage\r\n  );\r\n\r\n  // For preventing unneccessary consumer re-renders with wrap this in memo hook\r\n  // Also seprating dispatch context and language context to prevent same thing\r\n  const langValue = useMemo(() => language, [language]);\r\n  const dispValue = useMemo(() => langDispatch, [langDispatch]);\r\n  return (\r\n    <languageContext.Provider value={langValue}>\r\n      <dispatchContext.Provider value={dispValue}>\r\n        {props.children}\r\n      </dispatchContext.Provider>\r\n    </languageContext.Provider>\r\n  );\r\n}\r\n","const time = new Date();\r\n\r\nexport const weekDays = {\r\n  English: [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ],\r\n  Persian: [\r\n    \"یکشنبه\",\r\n    \"دوشنبه\",\r\n    \"سه شنبه\",\r\n    \"چهار شنبه\",\r\n    \"پنجشنبه\",\r\n    \"جمعه\",\r\n    \"شنبه\",\r\n  ],\r\n};\r\n\r\nexport function getWeekDays(lang) {\r\n  return weekDays[lang];\r\n}\r\n\r\nexport default function getDaily(lang) {\r\n  const next7Days = [];\r\n\r\n  // If today is 5 day of the week according to time.getDay()\r\n  //we get rest of the days after it\r\n  for (let i = time.getDay() + 1; i < 7; i++) {\r\n    next7Days.push(weekDays[lang][i]);\r\n  }\r\n  // If today is 5 day of the week according to time.getDay()\r\n  //we get the rest of the days before it\r\n  for (let x = 0; x <= time.getDay(); x++) {\r\n    next7Days.push(weekDays[lang][x]);\r\n  }\r\n\r\n  return next7Days;\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.90ab8cc0.png\";","module.exports = __webpack_public_path__ + \"static/media/berlin.4ea28db8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/france.4a6c0f70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/newyork.fa7cf03d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/london.c7343e04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loader.2b02159f.gif\";","module.exports = __webpack_public_path__ + \"static/media/weather-draw.a1d011a0.svg\";","export default function weatherReducer(state, action){\r\n    switch(action.type){\r\n        case \"GET_WEATHER\":\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: false,\r\n                weather: action.payload\r\n            }\r\n        case \"WEATHER_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                weather: \"No Weather\",\r\n                error: action.payload\r\n            }\r\n        \r\n        case \"CLEAR_WEATHER\":\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true,\r\n                weather: null\r\n            }   \r\n        default: \r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n};","import React, { createContext, useReducer, useMemo } from \"react\";\r\nimport weatherReducer from \"../reducers/WeatherReducer\";\r\n\r\nconst initialWeather = {\r\n  weather: null,\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\nexport const weatherContext = createContext();\r\nexport const WDispatchContext = createContext();\r\n\r\nexport function WeatherProvider(props) {\r\n  const [weather, dispatch] = useReducer(weatherReducer, initialWeather);\r\n\r\n  const weatherValue = useMemo(() => weather, [weather]);\r\n  const dispValue = useMemo(() => dispatch, []);\r\n\r\n  return (\r\n    <weatherContext.Provider value={weatherValue}>\r\n      <WDispatchContext.Provider value={dispValue}>\r\n        {props.children}\r\n      </WDispatchContext.Provider>\r\n    </weatherContext.Provider>\r\n  );\r\n}\r\n","export default function fullWeatherReducer(state, action){\r\n    switch(action.type){\r\n        case \"GET_FULL_WEATHER\":\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: false,\r\n                all: action.payload\r\n            }\r\n        case \"FULL_WEATHER_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                all: \"No Weather\",\r\n                error: action.payload\r\n            }\r\n        \r\n        case \"CLEAR_FULL_WEATHER\":\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true,\r\n                all: null\r\n            }   \r\n\r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n};","import React, { createContext, useReducer, useMemo } from \"react\";\r\nimport fullWeatherReducer from \"../reducers/FullWeatherReducer\";\r\n\r\nconst initialWeather = {\r\n  all: null,\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\nexport const fullWeatherContext = createContext();\r\nexport const FWDispatchContext = createContext();\r\n\r\nexport function FullWeatherProvider(props) {\r\n  const [fullWeather, dispatch2] = useReducer(\r\n    fullWeatherReducer,\r\n    initialWeather\r\n  );\r\n\r\n  const fullWeatherValue = useMemo(() => fullWeather, [fullWeather]);\r\n  const dispValue = useMemo(() => dispatch2, []);\r\n\r\n  return (\r\n    <fullWeatherContext.Provider value={fullWeatherValue}>\r\n      <FWDispatchContext.Provider value={dispValue}>\r\n        {props.children}\r\n      </FWDispatchContext.Provider>\r\n    </fullWeatherContext.Provider>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst API_KEY = \"8830cd81f73deb943fa440272e6cb704\";\r\n\r\n// Current Weather\r\nexport async function getWeather(dispatch, city) {\r\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`;\r\n\r\n  try {\r\n    const res = await axios.get(url);\r\n\r\n    dispatch({\r\n      type: \"GET_WEATHER\",\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: \"WEATHER_ERROR\",\r\n      payload: err.response,\r\n    });\r\n  }\r\n}\r\nexport function clearWeather(dispatch) {\r\n  dispatch({\r\n    type: \"CLEAR_WEATHER\",\r\n  });\r\n}\r\n\r\n// Full One Call Weather\r\nexport async function getFullWeather(dispatch, lon, lat) {\r\n  const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`;\r\n\r\n  try {\r\n    const res = await axios.get(url);\r\n    dispatch({\r\n      type: \"GET_FULL_WEATHER\",\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: \"FULL_WEATHER_ERROR\",\r\n    });\r\n  }\r\n}\r\nexport function clearFullWeather(dispatch) {\r\n  dispatch({\r\n    type: \"CLEAR_FULL_WEATHER\",\r\n  });\r\n}\r\n\r\n// Saving current city to localStorage\r\nexport function saveCityToLs(cityData) {\r\n  let cities;\r\n  if (!localStorage.getItem(\"cities\")) {\r\n    cities = [];\r\n  } else if (\r\n    JSON.parse(localStorage.getItem(\"cities\")).find(\r\n      (item) => item.lon === cityData.lon\r\n    )\r\n  ) {\r\n    const error = new Error(\"current city is already saved!\");\r\n    throw error;\r\n  } else {\r\n    cities = JSON.parse(localStorage.getItem(\"cities\"));\r\n  }\r\n  const cityName = cityData.city.split(\"\");\r\n  cityName.splice(0, 1, cityData.city.split(\"\")[0].toUpperCase());\r\n  cities.push({ ...cityData, city: cityName.join(\"\"), id: uuidv4() });\r\n  localStorage.setItem(\"cities\", JSON.stringify(cities));\r\n\r\n  return \"Successfully saved\";\r\n}\r\n\r\n// Deleting current city from localStorage\r\nexport function deleteCityFromLs(cityId) {\r\n  const allCities = loadCitiesFromLs();\r\n  if (\r\n    JSON.parse(localStorage.getItem(\"cities\")).find(\r\n      (item) => item.id === cityId\r\n    )\r\n  ) {\r\n    const savedCity = JSON.parse(localStorage.getItem(\"cities\")).find(\r\n      (item) => item.id === cityId\r\n    );\r\n    const filtered = allCities.filter((city) => city.id !== savedCity.id);\r\n    localStorage.setItem(\"cities\", JSON.stringify(filtered));\r\n\r\n    return \"Successfully deleted\";\r\n  } else {\r\n    const error = new Error(\"current city is already deleted!\");\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Clearing all cities from localStorage\r\nexport function clearAllCities() {\r\n  if (localStorage.getItem(\"cities\")) {\r\n    localStorage.removeItem(\"cities\");\r\n  } else {\r\n    const err = new Error(\"There is nothing to delete!\");\r\n    throw err;\r\n  }\r\n}\r\n\r\n// Loading all the cities from localStorage\r\nexport function loadCitiesFromLs() {\r\n  if (\r\n    !localStorage.getItem(\"cities\") ||\r\n    localStorage.getItem(\"cities\") === \"\"\r\n  ) {\r\n    return null;\r\n  } else {\r\n    return JSON.parse(localStorage.getItem(\"cities\"));\r\n  }\r\n}\r\n","export const headerLanguages = {\r\n  English: {\r\n    title: \"Weather App\",\r\n    direction: \"ltr\",\r\n    menus: {\r\n      home: \"Home\",\r\n      api: \"API\",\r\n    },\r\n  },\r\n  Persian: {\r\n    title: \"اَپ آب و هوا\",\r\n    direction: \"rtl\",\r\n    menus: {\r\n      home: \"خانه\",\r\n      api: \"ای پی آی\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const homeLanguages = {\r\n  English: {\r\n    searchTitle: \"Search for latest weather updates\",\r\n    submit: \"Get Weather\",\r\n    style: {\r\n      dir: \"ltr\",\r\n      borderRadiusSubmit: {\r\n        borderTopRightRadius: \"0.5rem\",\r\n        borderBottomRightRadius: \"0.5rem\",\r\n      },\r\n      borderRadiusField: {\r\n        borderTopLeftRadius: \"0.5rem\",\r\n        borderBottomLeftRadius: \"0.5rem\",\r\n      },\r\n    },\r\n  },\r\n  Persian: {\r\n    searchTitle: \"آخرین تغییرات آب و هوایی رو جست و جو کن\",\r\n    submit: \"دریافت آب و هوا\",\r\n    style: {\r\n      dir: \"rtl\",\r\n      borderRadiusSubmit: {\r\n        borderTopLeftRadius: \"0.5rem\",\r\n        borderBottomLeftRadius: \"0.5rem\",\r\n      },\r\n      borderRadiusField: {\r\n        borderTopRightRadius: \"0.5rem\",\r\n        borderBottomRightRadius: \"0.5rem\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const weatherLangs = {\r\n  English: {\r\n    mainTitle: {\r\n      normal: \"Weather\",\r\n      bold: \"Forecast\",\r\n    },\r\n    leading: \"Select worlds leading cities:\",\r\n    week: \"Week\",\r\n    style: {\r\n      dir: \"ltr\",\r\n    },\r\n    today: \"Today\",\r\n    humidity: \"Humidity:\",\r\n    dewPoint: \"Dew point:\",\r\n    feelsLike: \"Feels like:\",\r\n  },\r\n  Persian: {\r\n    mainTitle: {\r\n      normal: \"پیش بینی\",\r\n      bold: \"آب و هوا\",\r\n    },\r\n    leading: \"انتخاب شهرهای برتر جهان\",\r\n    week: \"هفته\",\r\n    style: {\r\n      dir: \"rtl\",\r\n    },\r\n    today: \"امروز\",\r\n    humidity: \"رطوبت:\",\r\n    dewPoint: \"نقطه شبنم:\",\r\n    feelsLike: \"حس دمایی:\",\r\n  },\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Language Context\r\nimport {\r\n  languageContext,\r\n  dispatchContext,\r\n} from \"../../context/languageContext\";\r\n\r\n// Logo\r\nimport Logo from \"../../images/logo.png\";\r\n\r\n// Language Data\r\nimport { headerLanguages } from \"../../utils/languageData\";\r\n\r\nfunction Header() {\r\n  const language = useContext(languageContext);\r\n  const langDispatch = useContext(dispatchContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Change Callback Optimization\r\n  function handleLangChange(e) {\r\n    langDispatch({\r\n      type: \"CHANGE_LANGUAGE\",\r\n      payload: e.target.checked ? \"Persian\" : \"English\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <header className=\"header-container\">\r\n      <nav className=\"navigation container\">\r\n        <div className=\"hamburger\" onClick={() => setOpen(!open)}>\r\n          {open ? (\r\n            <i className=\"fas fa-times-circle\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-bars\"></i>\r\n          )}\r\n        </div>\r\n\r\n        <ul className={open ? \"nav-links open\" : \"nav-links\"}>\r\n          <li className={open ? \"nav-item fade\" : \"nav-item\"}>\r\n            <img className=\"logo\" src={Logo} alt=\"logo\" />\r\n          </li>\r\n          <li className={open ? \"nav-item fade\" : \"nav-item\"}>\r\n            <div className=\"button r\" id=\"button-3\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                onChange={handleLangChange}\r\n                checked={language.current === \"English\" ? false : true}\r\n              />\r\n              <div className=\"knobs\"></div>\r\n              <div className=\"layer\"></div>\r\n            </div>\r\n          </li>\r\n          <li className={open ? \"nav-item fade\" : \"nav-item\"}>\r\n            <Link to=\"/\">{headerLanguages[language.current].menus.home}</Link>\r\n          </li>\r\n          <li className={open ? \"nav-item fade\" : \"nav-item\"}>\r\n            <Link to=\"/api\">{headerLanguages[language.current].menus.api}</Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <h1 className=\"main-title\">\r\n          {headerLanguages[language.current].title}\r\n        </h1>\r\n        <ul className=\"list\">\r\n          <li className=\"list-item\">\r\n            <div className=\"button r\" id=\"button-3\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                onChange={handleLangChange}\r\n                checked={language.current === \"English\" ? false : true}\r\n              />\r\n              <div className=\"knobs\"></div>\r\n              <div className=\"layer\"></div>\r\n            </div>\r\n          </li>\r\n          <li className=\"list-item\">\r\n            <Link to=\"/\">{headerLanguages[language.current].menus.home}</Link>\r\n          </li>\r\n          <li className=\"list-item\">\r\n            <a\r\n              href=\"https://openweathermap.org/api\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              {headerLanguages[language.current].menus.api}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default React.memo(Header);\r\n","import React from \"react\";\r\n\r\nconst languages = {\r\n  English: {\r\n    errMessage: \"We are sorry about this but\",\r\n  },\r\n  Persian: {\r\n    errMessage: \"متاسفانه خطایی رخ داده است که\",\r\n  },\r\n};\r\n\r\n// **** This Component handles the errors happening withing Async Calls\r\nexport default function ErrorHandler({ currentLang, message, type }) {\r\n  if (type === \"success\") {\r\n    return (\r\n      <div className=\"popup-wrapper\">\r\n        <h3 className=\"success-message\">\r\n          <i className=\"fas fa-check-circle\"></i>\r\n          {message}\r\n        </h3>\r\n      </div>\r\n    );\r\n  } else if (type === \"error\") {\r\n    return (\r\n      <div className=\"popup-wrapper\">\r\n        <h3 className=\"error-message\">\r\n          <i className=\"fas fa-exclamation-circle\"></i>\r\n          {languages[currentLang].errMessage + \" \" + message}\r\n        </h3>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React, { useState, useCallback, useEffect, useContext } from \"react\";\r\n\r\n// Custom Hooks\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\n// Context API\r\nimport { getWeather, clearWeather } from \"../../actions/index\";\r\nimport { weatherContext, WDispatchContext } from \"../../context/weatherContext\";\r\nimport { languageContext } from \"../../context/languageContext\";\r\n\r\n// Components\r\nimport Header from \"../layouts/Header\";\r\nimport ErrorHandler from \"../../ErrorBoundry/ErrorHandler\";\r\n\r\n// Languages Data\r\nimport { homeLanguages } from \"../../utils/languageData\";\r\n\r\nfunction Home() {\r\n  const weather = useContext(weatherContext);\r\n  const dispatch = useContext(WDispatchContext);\r\n  const language = useContext(languageContext);\r\n  const [userForm, change] = useForm({ city: \"\" });\r\n  const [errUI, setErrUI] = useState(false);\r\n\r\n  // This useEffect will cleanUp API data after each component mounting\r\n  useEffect(() => {\r\n    return () => clearWeather(dispatch);\r\n  }, [dispatch]);\r\n\r\n  // If there is any error from API then this useEffect will\r\n  // trigger ErrorUI to be shown for a limited time\r\n  useEffect(() => {\r\n    if (weather.error) {\r\n      setErrUI(true);\r\n    }\r\n    // Error timeout which will turn off errUI after 3seconds\r\n    const errTimeout = setTimeout(() => {\r\n      setErrUI(false);\r\n    }, 3000);\r\n    return () => clearTimeout(errTimeout);\r\n  }, [weather.error]);\r\n\r\n  // Handle Change Callback Optimization\r\n  const handleChange = useCallback((e) => change(e), [change]);\r\n  // Handle Submit Callback Optimization\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      getWeather(dispatch, userForm.city);\r\n    },\r\n    [dispatch, userForm.city]\r\n  );\r\n\r\n  // If there is no error and the weather for submited city exists then redirect to Weather.js\r\n  if (!weather.error && weather.weather) {\r\n    window.location.assign(\r\n      `/weather/${userForm.city}/${weather.weather.coord.lon}&${weather.weather.coord.lat}`\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div\r\n        style={{ direction: homeLanguages[language.current].style.dir }}\r\n        className=\"home-container\"\r\n      >\r\n        {errUI ? (\r\n          <ErrorHandler\r\n            message={weather.error.data.message}\r\n            currentLang={language.current}\r\n            type=\"error\"\r\n          />\r\n        ) : null}\r\n        <div className=\"search-container\">\r\n          <div className=\"form-container\">\r\n            <h1 className=\"search-title\">\r\n              {homeLanguages[language.current].searchTitle}\r\n            </h1>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <input\r\n                className=\"search-field\"\r\n                type=\"text\"\r\n                name=\"city\"\r\n                value={userForm.city}\r\n                onChange={handleChange}\r\n                style={homeLanguages[language.current].style.borderRadiusField}\r\n              />\r\n              <input\r\n                className=\"search-submit\"\r\n                type=\"submit\"\r\n                value={homeLanguages[language.current].submit}\r\n                style={homeLanguages[language.current].style.borderRadiusSubmit}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialForm) => {\r\n  const [form, setForm] = useState(initialForm);\r\n\r\n  const change = ({ target: { name, value } }) => {\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return [form, change, () => setForm(initialForm)];\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nfunction LiveClock() {\r\n  const [clock, setClock] = useState();\r\n  const time = new Date();\r\n  const getLiveClock = useCallback(() => {\r\n    const hour = time.getHours();\r\n    const minute = time.getMinutes();\r\n    const second = time.getSeconds();\r\n\r\n    return `${String(hour).padStart(2, \"0\")}:${String(minute).padStart(\r\n      2,\r\n      \"0\"\r\n    )}:${String(second).padStart(2, \"0\")}`;\r\n  }, [time]);\r\n\r\n  useEffect(() => {\r\n    let clockInterval = setInterval(() => setClock(getLiveClock()), 1000);\r\n\r\n    return () => clearInterval(clockInterval);\r\n  }, [getLiveClock]);\r\n\r\n  return <p className=\"local-time\">{clock}</p>;\r\n}\r\n\r\nexport default React.memo(LiveClock);\r\n","import React, { useState, useContext } from \"react\";\r\nimport { languageContext } from \"../../context/languageContext\";\r\nimport { clearAllCities } from \"../../actions/index\";\r\n\r\nconst langs = {\r\n  English: {\r\n    rusure: \"Are you sure ?\",\r\n    clear: \"Clear\",\r\n  },\r\n  Persian: {\r\n    rusure: \"آیا مطمئن هستید ؟\",\r\n    clear: \"پاک سازی\",\r\n  },\r\n};\r\n\r\nfunction Modal({ toggleModal }) {\r\n  const { language } = useContext(languageContext);\r\n  const [err, setErr] = useState({ hasErr: false, message: \"\" });\r\n\r\n  function handleClear() {\r\n    try {\r\n      clearAllCities();\r\n      toggleModal(false);\r\n      window.location.reload();\r\n    } catch (err) {\r\n      setErr({ hasErr: true, message: err.message });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"black-layer\"></div>\r\n      <div className=\"modal-container\">\r\n        <div className=\"modal-wrapper\">\r\n          <i\r\n            className=\"fas fa-times-circle\"\r\n            onClick={() => toggleModal(false)}\r\n          ></i>\r\n          <h1 className=\"modal-title\">{langs[language.current].rusure}</h1>\r\n          <button className=\"modal-confirm\" onClick={handleClear}>\r\n            {langs[language.current].clear}\r\n          </button>\r\n          {err.hasErr ? <h4 className=\"modal-error\">{err.message}</h4> : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\n// Context\r\nimport { languageContext } from \"../../context/languageContext\";\r\n\r\n// Components\r\nimport Modal from \"../modal/Modal\";\r\n\r\n// Actions\r\nimport { loadCitiesFromLs } from \"../../actions/index\";\r\n\r\n// Images\r\nimport berlin from \"../../images/cities/berlin.jpg\";\r\nimport france from \"../../images/cities/france.jpg\";\r\nimport newyork from \"../../images/cities/newyork.jpg\";\r\nimport london from \"../../images/cities/london.jpg\";\r\n\r\nconst langs = {\r\n  English: {\r\n    cities: {\r\n      berlin: \"Berlin, Germany\",\r\n      paris: \"Paris, France\",\r\n      newyork: \"New York, USA\",\r\n      london: \"London, England\",\r\n    },\r\n    clear: \"Clear cities\",\r\n    save: \"Save city\",\r\n    delete: \"Delete city\",\r\n  },\r\n  Persian: {\r\n    cities: {\r\n      berlin: \"برلین، آلمان\",\r\n      paris: \"پاریس، فرانسه\",\r\n      newyork: \"نیویورک، آمریکا\",\r\n      london: \"لندن، انگلیس\",\r\n    },\r\n    clear: \"پاک کردن کل شهرها\",\r\n    save: \"ذخیره شهره فعلی\",\r\n    delete: \"پاک کردن شهر فعلی\",\r\n  },\r\n};\r\n\r\nfunction CitiesList({ currentCityLon, saveCity, deleteCity }) {\r\n  const language = useContext(languageContext);\r\n\r\n  const [toggleModal, setToggleModal] = useState(false);\r\n  const cities = loadCitiesFromLs();\r\n  const isSaved =\r\n    cities && cities.find((item) => item.lon === currentCityLon) ? true : false;\r\n  const style = {\r\n    border: isSaved ? \"1px solid #ff3838\" : \"1px solid #110e3c\",\r\n  };\r\n\r\n  function handleClearCities(e) {\r\n    e.preventDefault();\r\n    setToggleModal(!toggleModal);\r\n  }\r\n\r\n  return (\r\n    <div className=\"cities-list\">\r\n      <div className=\"city-item\">\r\n        <a className=\"city-item-link\" href=\"/weather/Berlin/13.41&52.52\">\r\n          <img className=\"city-img\" src={berlin} alt=\"berlin\" />\r\n          <p className=\"city-name\">{langs[language.current].cities.berlin}</p>\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"city-item\">\r\n        <a className=\"city-item-link\" href=\"/weather/Paris/2.35&48.85\">\r\n          <img className=\"city-img\" src={france} alt=\"france\" />\r\n          <p className=\"city-name\">{langs[language.current].cities.paris}</p>\r\n        </a>\r\n      </div>\r\n      <div className=\"city-item\">\r\n        <a className=\"city-item-link\" href=\"/weather/New%20York/-74.01&40.71\">\r\n          <img className=\"city-img\" src={newyork} alt=\"newyork\" />\r\n          <p className=\"city-name\">{langs[language.current].cities.newyork}</p>\r\n        </a>\r\n      </div>\r\n      <div className=\"city-item\">\r\n        <a className=\"city-item-link\" href=\"/weather/London/-0.13&51.51\">\r\n          <img className=\"city-img\" src={london} alt=\"london\" />\r\n          <p className=\"city-name\">{langs[language.current].cities.london}</p>\r\n        </a>\r\n      </div>\r\n      <div style={style} className=\"city-item\">\r\n        <div className=\"city-add\">\r\n          {!isSaved ? (\r\n            <>\r\n              <i className=\"fas fa-plus\"></i>\r\n              <button className=\"city-add-btn\" onClick={handleClearCities}>\r\n                {langs[language.current].clear}\r\n              </button>\r\n              <button className=\"city-add-btn\" onClick={saveCity}>\r\n                {langs[language.current].save}\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <i className=\"fas fa-trash\"></i>\r\n              <button className=\"city-add-btn\" onClick={handleClearCities}>\r\n                {langs[language.current].clear}\r\n              </button>\r\n              <button\r\n                className=\"city-add-btn\"\r\n                onClick={(e) =>\r\n                  deleteCity(\r\n                    e,\r\n                    cities.find((item) => item.lon === currentCityLon).id\r\n                  )\r\n                }\r\n              >\r\n                {langs[language.current].delete}\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {toggleModal ? <Modal toggleModal={setToggleModal} /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(CitiesList);\r\n","import React, { useContext } from \"react\";\r\nimport { languageContext } from \"../../context/languageContext\";\r\n\r\nconst langs = {\r\n  English: \"Go home\",\r\n  Persian: \"بازگشت\",\r\n};\r\n\r\nfunction BackBtn() {\r\n  const language = useContext(languageContext);\r\n\r\n  return (\r\n    <div className=\"go-back\">\r\n      <a href=\"/\" className=\"go-back-btn\">\r\n        {langs[language.current]}\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(BackBtn);\r\n","import React, { useState, useCallback, useContext } from \"react\";\r\n// Actions\r\nimport { loadCitiesFromLs } from \"../../actions/index\";\r\n// Contexts\r\nimport { languageContext } from \"../../context/languageContext\";\r\n\r\nconst langs = {\r\n  English: {\r\n    select: {\r\n      saved: \"Select a city\",\r\n      noSaved: \"There is no saved cities yet\",\r\n    },\r\n    submit: \"Get weather\",\r\n    style: {\r\n      borderRadiusSubmit: {\r\n        borderTopRightRadius: \"0.5rem\",\r\n        borderBottomRightRadius: \"0.5rem\",\r\n      },\r\n      borderRadiusField: {\r\n        borderTopLeftRadius: \"0.5rem\",\r\n        borderBottomLeftRadius: \"0.5rem\",\r\n      },\r\n    },\r\n  },\r\n  Persian: {\r\n    select: {\r\n      saved: \"یک شهر انتخاب کنید\",\r\n      noSaved: \"هیچ شهری ذخیره نشده است\",\r\n    },\r\n    submit: \"دریافت آب و هوا\",\r\n    style: {\r\n      borderRadiusSubmit: {\r\n        borderTopLeftRadius: \"0.5rem\",\r\n        borderBottomLeftRadius: \"0.5rem\",\r\n      },\r\n      borderRadiusField: {\r\n        borderTopRightRadius: \"0.5rem\",\r\n        borderBottomRightRadius: \"0.5rem\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nfunction SelectSavedCities() {\r\n  const [selectedCity, setSelectedCity] = useState({});\r\n  const language = useContext(languageContext);\r\n\r\n  // Handling changes of Select element\r\n  const handleSelectChange = useCallback((e) => {\r\n    e.preventDefault();\r\n    const cityId = e.target.value;\r\n    const selectedCityData = loadCitiesFromLs().find(\r\n      (item) => item.id === cityId\r\n    );\r\n    setSelectedCity(selectedCityData);\r\n  }, []);\r\n\r\n  // Go to the selected city and load the weather data for it\r\n  const handleFindSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (selectedCity) {\r\n        window.location.assign(\r\n          `/weather/${selectedCity.city}/${selectedCity.lon}&${selectedCity.lat}`\r\n        );\r\n      }\r\n    },\r\n    [selectedCity]\r\n  );\r\n\r\n  const savedCities = loadCitiesFromLs();\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <form className=\"form\" onSubmit={handleFindSubmit}>\r\n        <div className=\"input-group\">\r\n          <i className=\"fas fa-search-location\"></i>\r\n          <select\r\n            className=\"search-input\"\r\n            name=\"cities\"\r\n            style={langs[language.current].style.borderRadiusField}\r\n            onChange={handleSelectChange}\r\n            defaultValue=\"DEFAULT\"\r\n            disabled={savedCities ? false : true}\r\n          >\r\n            <option value=\"DEFAULT\" disabled>\r\n              {savedCities\r\n                ? langs[language.current].select.saved\r\n                : langs[language.current].select.noSaved}\r\n            </option>\r\n            {savedCities\r\n              ? savedCities.map((item) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.city}\r\n                  </option>\r\n                ))\r\n              : null}\r\n          </select>\r\n          <input\r\n            className=\"search-submit\"\r\n            style={langs[language.current].style.borderRadiusSubmit}\r\n            type=\"submit\"\r\n            value={langs[language.current].submit}\r\n            disabled={selectedCity.id ? false : true}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(SelectSavedCities);\r\n","import React from \"react\";\r\nimport loaderImg from \"../../images/loader.gif\";\r\n\r\nexport default function Loader({ classes }) {\r\n  return (\r\n    <div className={classes === \"main\" ? \"main-loader\" : \"fall-back\"}>\r\n      <img className=\"loader-img\" src={loaderImg} alt=\"Loader\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst languages = {\r\n  English: {\r\n    errMessage: \"We are sorry about this but\",\r\n  },\r\n  Persian: {\r\n    errMessage: \"متاسفانه خطایی رخ داده است که\",\r\n  },\r\n};\r\n\r\n// *** This Component Handles The Errors happening outside of Async Calls\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n      caughtMessage: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, caughtMessage: error.message };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    const { currentLang } = this.props;\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"error-wrapper\">\r\n          <i className=\"fas fa-exclamation-circle\"></i>\r\n          <h3 className=\"error-message\">\r\n            {languages[currentLang].errMessage + \" \" + this.state.caughtMessage}\r\n            !\r\n          </h3>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","export const months = {\r\n  English: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ],\r\n  Persian: [\r\n    \"ژانویه\",\r\n    \"فوریه\",\r\n    \"مارس\",\r\n    \"آپریل\",\r\n    \"می\",\r\n    \"ژوئن\",\r\n    \"جولای\",\r\n    \"آگوست\",\r\n    \"سپتامبر\",\r\n    \"اوکتبر\",\r\n    \"نوامبر\",\r\n    \"دسامبر\",\r\n  ],\r\n};\r\n\r\nexport default function getMonths(lang) {\r\n  return months[lang];\r\n}\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useContext,\r\n  Suspense,\r\n  lazy,\r\n} from \"react\";\r\n\r\n// Context API\r\nimport {\r\n  getWeather,\r\n  clearWeather,\r\n  getFullWeather,\r\n  clearFullWeather,\r\n  saveCityToLs,\r\n  deleteCityFromLs,\r\n} from \"../../actions/index\";\r\nimport {\r\n  fullWeatherContext,\r\n  FWDispatchContext,\r\n} from \"../../context/fullWeatherContext\";\r\nimport { weatherContext, WDispatchContext } from \"../../context/weatherContext\";\r\nimport {\r\n  languageContext,\r\n  dispatchContext,\r\n} from \"../../context/languageContext\";\r\n\r\n// Components\r\nimport LiveClock from \"../layouts/LiveClock\";\r\nimport CitiesList from \"../layouts/CitiesList\";\r\nimport BackBtn from \"../layouts/BackBtn\";\r\nimport SelectSavedCities from \"../forms/SelectSavedCities\";\r\nimport Loader from \"../layouts/Loader\";\r\nimport ErrorBoundary from \"../../ErrorBoundry/ErrorBoundary\"; // For Thrown Errors\r\nimport ErrorHandler from \"../../ErrorBoundry/ErrorHandler\"; // For Async Catch\r\n\r\n// Utilities\r\nimport { getWeekDays } from \"../../utils/getDaily\";\r\nimport getMonths from \"../../utils/getMonths\";\r\n\r\n// Images\r\nimport weatherDraw from \"../../images/weather-draw.svg\";\r\n\r\n// Languages Data\r\nimport { weatherLangs } from \"../../utils/languageData\";\r\n\r\n// Components With Lazy-Load\r\nconst WeatherDaily = lazy(() => import(\"../layouts/WeatherDaily.js\"));\r\nconst WeatherHourly = lazy(() => import(\"../layouts/WeatherHourly.js\"));\r\n\r\nconst time = new Date();\r\n\r\nfunction Weather(props) {\r\n  const [popup, setPopup] = useState({ show: false, message: \"\", type: \"\" });\r\n  // Language Context & Dispatch\r\n  const language = useContext(languageContext);\r\n  const langDispatch = useContext(dispatchContext);\r\n  // Weather Context & Dispatch\r\n  const weather = useContext(weatherContext);\r\n  const dispatch = useContext(WDispatchContext);\r\n  // Full Weather Context & Dispatch\r\n  const fullWeather = useContext(fullWeatherContext);\r\n  const dispatch2 = useContext(FWDispatchContext);\r\n\r\n  const { city, coord } = props.match.params;\r\n  const lon = coord.split(\"&\")[0];\r\n  const lat = coord.split(\"&\")[1];\r\n\r\n  console.log(\"RENDER\");\r\n\r\n  // Fetching full weather data\r\n  useEffect(() => {\r\n    getFullWeather(dispatch2, lon, lat);\r\n\r\n    return () => clearFullWeather(dispatch2);\r\n  }, [dispatch2, lon, lat]);\r\n\r\n  // Fetching current weather data\r\n  useEffect(() => {\r\n    getWeather(dispatch, city);\r\n\r\n    return () => clearWeather(dispatch);\r\n  }, [dispatch, city]);\r\n\r\n  // Side effect timeout for PopUp on UI\r\n  useEffect(() => {\r\n    let popupTimeout = null;\r\n\r\n    if (popup.show) {\r\n      popupTimeout = setTimeout(() => {\r\n        setPopup({ ...popup, show: false });\r\n      }, 5000);\r\n    }\r\n    return () => clearTimeout(popupTimeout);\r\n  }, [popup]);\r\n\r\n  // Adding current city to the localstorage event handler\r\n  const handleCitySubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        const result = saveCityToLs({ city, lon, lat });\r\n        setPopup({ show: true, message: result, type: \"success\" });\r\n      } catch (err) {\r\n        setPopup({ show: true, message: err.message, type: \"error\" });\r\n      }\r\n    },\r\n    [city, lon, lat]\r\n  );\r\n\r\n  // Deleting current city from the localstorage event handler\r\n  const handleCityDelete = useCallback((e, id) => {\r\n    e.preventDefault();\r\n    try {\r\n      const result = deleteCityFromLs(id);\r\n      setPopup({ show: true, message: result, type: \"success\" });\r\n    } catch (err) {\r\n      setPopup({ show: true, message: err.message, type: \"error\" });\r\n    }\r\n  }, []);\r\n\r\n  // Togle Language Change\r\n  function toggleLanguage(e) {\r\n    langDispatch({\r\n      type: \"CHANGE_LANGUAGE\",\r\n      payload: e.target.checked ? \"Persian\" : \"English\",\r\n    });\r\n  }\r\n\r\n  // If data is not fetched then show the loading screen\r\n  if (\r\n    !fullWeather.all ||\r\n    fullWeather.loading ||\r\n    !weather.weather ||\r\n    weather.loading\r\n  ) {\r\n    return <Loader classes=\"main\" />;\r\n  } else if (fullWeather.error) {\r\n    // if any error happens from fullWeather-fetch then show it on popup\r\n    return (\r\n      <ErrorHandler\r\n        message={fullWeather.error.data.message}\r\n        currentLang=\"English\"\r\n        type=\"error\"\r\n      />\r\n    );\r\n  } else if (weather.error) {\r\n    // if any error happens from weather-fetch then show it on popup\r\n    return (\r\n      <>\r\n        <BackBtn />\r\n        <ErrorHandler\r\n          message={weather.error.data.message}\r\n          currentLang=\"English\"\r\n          type=\"error\"\r\n        />\r\n      </>\r\n    );\r\n  } else if (\r\n    // if the user changes city-name in the url then check the lon and lat to weather-fetch\r\n    // if there is mis-match then show it on popup\r\n    weather.weather.coord.lon !== Number(lon) ||\r\n    weather.weather.coord.lat !== Number(lat)\r\n  ) {\r\n    return (\r\n      <>\r\n        <BackBtn />\r\n        <ErrorHandler\r\n          message=\"Coordinations doesn't match the city name!\"\r\n          currentLang=\"English\"\r\n          type=\"error\"\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  // Simple calculations\r\n  const currentTemp = Math.round(fullWeather.all.current.temp);\r\n  const feelsLike = Math.round(fullWeather.all.current.feels_like);\r\n  // const sunset = fullWeather.all.current.sunset;\r\n  // const sunrise = fullWeather.all.current.sunrise;\r\n\r\n  return (\r\n    <ErrorBoundary currentLang={language.current}>\r\n      {popup.show ? (\r\n        <ErrorHandler\r\n          currentLang=\"English\"\r\n          message={popup.message}\r\n          type={popup.type}\r\n        />\r\n      ) : null}\r\n      <div\r\n        style={{ direction: weatherLangs[language.current].style.dir }}\r\n        className=\"weather-container\"\r\n      >\r\n        <div className=\"weather-wrapper\">\r\n          <div className=\"weather-left\">\r\n            <div className=\"weather-left-container\">\r\n              <div className=\"buttons-group\">\r\n                <div className=\"button r\" id=\"button-3\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"checkbox\"\r\n                    onChange={toggleLanguage}\r\n                    checked={language.current === \"English\" ? false : true}\r\n                  />\r\n                  <div className=\"knobs\"></div>\r\n                  <div className=\"layer\"></div>\r\n                </div>\r\n              </div>\r\n              <BackBtn />\r\n              <SelectSavedCities />\r\n              <div className=\"main-title-wrapper\">\r\n                <h1 className=\"main-title-text\">\r\n                  {weatherLangs[language.current].mainTitle.normal}{\" \"}\r\n                  <span className=\"main-title-text-bold\">\r\n                    {weatherLangs[language.current].mainTitle.bold}\r\n                  </span>\r\n                </h1>\r\n              </div>\r\n              <p>{weatherLangs[language.current].leading}</p>\r\n              <CitiesList\r\n                currentCityLon={lon}\r\n                saveCity={handleCitySubmit}\r\n                deleteCity={handleCityDelete}\r\n              />\r\n              <div className=\"daily\">\r\n                <div className=\"daily-title\">\r\n                  <h2 className=\"daily-title-text\">\r\n                    {weatherLangs[language.current].week}\r\n                    <div className=\"dot\"></div>\r\n                  </h2>\r\n                  <Suspense fallback={<Loader classes=\"fall\" />}>\r\n                    <WeatherDaily data={fullWeather.all.daily} />\r\n                  </Suspense>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"weather-right\">\r\n            <i className=\"fas fa-cloud cloud-1\"></i>\r\n            <i className=\"fas fa-cloud cloud-2\"></i>\r\n            <LiveClock />\r\n            <img className=\"weather-draw\" src={weatherDraw} alt=\"\" />\r\n            <div className=\"overview\">\r\n              <div className=\"overview-header\">\r\n                <div className=\"overview-header-today\">\r\n                  <h2 className=\"overview-header-today-title\">\r\n                    {weatherLangs[language.current].today}\r\n                  </h2>\r\n                  <p className=\"overview-header-today-date\">\r\n                    {`${\r\n                      getWeekDays(language.current)[time.getDay()]\r\n                    }, ${time.getDate()} ${\r\n                      getMonths(language.current)[time.getMonth()]\r\n                    } ${time.getFullYear()}`}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"overview-header-icon\">\r\n                <img\r\n                  src={`https://openweathermap.org/img/w/${fullWeather.all.current.weather[0].icon}.png`}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"overview-temp\">\r\n                <h1 className=\"overview-temp-current\">{currentTemp}</h1>\r\n                <span className=\"over-view-temp-sign\">°C</span>\r\n              </div>\r\n              <div className=\"overview-country\">\r\n                <h4 className=\"overview-country-cityname\">\r\n                  {weather.weather.name}\r\n                </h4>\r\n                <small className=\"overview-country-timezone\">\r\n                  {fullWeather.all.timezone}\r\n                </small>\r\n              </div>\r\n              <div className=\"overview-humiditydew\">\r\n                <div className=\"overview-humidity\">\r\n                  <p>{`${weatherLangs[language.current].humidity} ${\r\n                    fullWeather.all.current.humidity\r\n                  }%`}</p>\r\n                  <i className=\"fas fa-tint\"></i>\r\n                </div>\r\n                <div className=\"overview-dewpoint\">\r\n                  <p>{`${weatherLangs[language.current].dewPoint} ${\r\n                    fullWeather.all.current.dew_point\r\n                  }°C`}</p>\r\n                  <i className=\"fas fa-hand-holding-water\"></i>\r\n                </div>\r\n              </div>\r\n              <div className=\"overview-more-info\">\r\n                <p className=\"overview-more-info-feels-like\">{`${\r\n                  weatherLangs[language.current].feelsLike\r\n                } ${feelsLike}°C\r\n                            `}</p>\r\n                {/* <p className=\"overview-more-info-sunset\">Sunset {sunset}</p>\r\n                <p className=\"overview-more-info-sunrise\">Sunrise {sunrise}</p> */}\r\n              </div>\r\n            </div>\r\n            <Suspense fallback={<Loader classes=\"fall-back\" />}>\r\n              <WeatherHourly data={fullWeather.all.hourly} />\r\n            </Suspense>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\nexport default Weather;\r\n","import React from \"react\";\r\nimport BackBtn from \"../layouts/BackBtn\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"not-found-container\">\r\n      <div className=\"not-found-wrapper\">\r\n        <BackBtn />\r\n        <h1 className=\"not-found-title\">Not Found</h1>\r\n        <p className=\"not-found-text\">\r\n          We are sorry but something you were looking for does not exist.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Providers\nimport { WeatherProvider } from \"./context/weatherContext\";\nimport { FullWeatherProvider } from \"./context/fullWeatherContext\";\nimport { LanguageProvider } from \"./context/languageContext\";\n\n// Pages\nimport Home from \"./components/pages/Home\";\nimport Weather from \"./components/pages/Weather\";\nimport NotFound from \"./components/pages/NotFound\";\n\nfunction App() {\n  return (\n    <WeatherProvider>\n      <LanguageProvider>\n        <FullWeatherProvider>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/weather/:city/:coord\" component={Weather} />\n              <Route component={NotFound} />\n            </Switch>\n          </Router>\n        </FullWeatherProvider>\n      </LanguageProvider>\n    </WeatherProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Global Style\nimport \"./styles/global.css\";\nimport \"./styles/css/style.css\";\n// Page styles\nimport \"./styles/components/pages/Home.css\";\nimport \"./styles/components/pages/Weather.css\";\nimport \"./styles/components/pages/NotFound.css\";\n// Layout Styles\nimport \"./styles/components/layouts/header.css\";\nimport \"./styles/components/layouts/WeatherDaily.css\";\nimport \"./styles/components/layouts/WeatherHourly.css\";\nimport \"./styles/components/layouts/CitiesList.css\";\nimport \"./styles/components/layouts/BackBtn.css\";\n// Form styles\nimport \"./styles/components/forms/SelectSavedCities.css\";\n// Modal Styles\nimport \"./styles/components/modal/Modal.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}